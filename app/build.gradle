apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def getLocalVersionBuildNumber() {
    def versionPropsFile = file('version.properties')

    /*Setting default value for versionBuild which is the last incremented value stored in the file */
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        return versionProps['VERSION_BUILD'].toInteger()
    } else {
        return -1
    }
}

def addLocalVersionBuildNumber() {
    def versionPropsFile = file('version.properties')
    def versionBuild

    /*Setting default value for versionBuild which is the last incremented value stored in the file */
    if (versionPropsFile.canRead()) {
        Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger() + 1
        versionProps['VERSION_BUILD'] = versionBuild.toString()
        versionProps.store(versionPropsFile.newWriter(), null)
    } else {
        return -1
    }
}

android {
    addLocalVersionBuildNumber()

    def versionPropsFile = file('version.properties')
    def versionBuild

    /*Setting default value for versionBuild which is the last incremented value stored in the file */
    if (versionPropsFile.canRead()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        versionBuild = versionProps['VERSION_BUILD'].toInteger()
    } else {
        throw new FileNotFoundException("Could not read version.properties!")
    }

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    defaultConfig {
        applicationId "com.example.hermes.test"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0." + versionBuild
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    dataBinding {
        enabled = true
    }
}

repositories {
    flatDir {
        dirs 'libs'
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile(name: 'lib_base-debug', ext: 'aar')

    compile "com.android.support:appcompat-v7:${rootProject.supportLibVersion}"
    compile "com.android.support:support-v13:${rootProject.supportLibVersion}"
    compile "com.android.support:support-v4:${rootProject.supportLibVersion}"
    compile "com.android.support:design:${rootProject.supportLibVersion}"
    compile "com.android.support:cardview-v7:${rootProject.supportLibVersion}"
    compile "com.android.support:recyclerview-v7:${rootProject.supportLibVersion}"
    compile "com.android.support:transition:${rootProject.supportLibVersion}"
    compile "com.android.support:percent:${rootProject.supportLibVersion}"
    compile "com.android.support:support-annotations:${rootProject.supportLibVersion}"
    compile "com.android.support.constraint:constraint-layout:${rootProject.constraintVersion}"
    compile "com.google.android:flexbox:${rootProject.flexboxVersion}"
    compile "com.google.guava:guava:${rootProject.guavaVersion}"
    compile 'com.google.code.gson:gson:2.8.2'
    compile 'com.android.support:multidex:1.0.1'

    compileOnly "org.projectlombok:lombok:${rootProject.lomBokVersion}"
    annotationProcessor "org.projectlombok:lombok:${rootProject.lomBokVersion}"

    compile "com.jakewharton:butterknife:${rootProject.butterKnifeVersion}"
    annotationProcessor "com.jakewharton:butterknife-compiler:${rootProject.butterKnifeVersion}"
    compile "com.marshalchen.ultimaterecyclerview:library:${rootProject.ultimaterecyclerviewVersion}"
    compile "com.github.CymChad:BaseRecyclerViewAdapterHelper:${rootProject.baseRecyclerViewAdapterHelperVersion}"
    compile 'com.afollestad.material-dialogs:commons:0.9.3.0'

    //test
    androidTestCompile("com.android.support.test.espresso:espresso-core:${rootProject.espressoVersion}", {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    // Dependencies for local unit tests
    testCompile "junit:junit:${rootProject.junitVersion}"
    testCompile "org.mockito:mockito-all:${rootProject.mockitoVersion}"
    testCompile "org.hamcrest:hamcrest-all:${rootProject.hamcrestVersion}"

    // Support OffsetDateTime
//    compile 'com.jakewharton.threetenabp:threetenabp:1.0.5'

    // OffsetDateTime
    compile "org.threeten:threetenbp:$threetenbp_version"

    // RxJava2
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    compile 'com.tbruyelle.rxpermissions2:rxpermissions:0.8.2@aar'

    compile "com.squareup.retrofit2:retrofit:$rootProject.retrofit_version"
    compile "com.squareup.retrofit2:converter-scalars:$rootProject.retrofit_version"
    compile "com.squareup.retrofit2:converter-gson:$rootProject.retrofit_version"
    compile "com.squareup.retrofit2:adapter-rxjava2:$rootProject.retrofit_version"
    compile "io.reactivex.rxjava2:rxjava:$rootProject.rx_java_version"

    // Log
    compile 'com.orhanobut:logger:2.1.1'

    testCompile "org.powermock:powermock-module-junit4:1.6.2"
    testCompile "org.powermock:powermock-module-junit4-rule:1.6.2"
    testCompile "org.powermock:powermock-api-mockito:1.6.2"
    testCompile "org.powermock:powermock-classloading-xstream:1.6.2"

    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$rootProject.kotlin_version"
    implementation "org.jetbrains.anko:anko:$rootProject.anko_version"

    compile 'com.github.ppamorim:dragger:1.2'
    compile 'com.github.liuguangqiang.swipeback:library:1.0.2@aar'

    compile 'cn.jzvd:jiaozivideoplayer:6.2.9'

    // alibaba arouter
    compile "com.alibaba:arouter-api:$rootProject.arouter_api_version"
    annotationProcessor "com.alibaba:arouter-compiler:$rootProject.arouter_compiler_version"

    if (isAddUserModule.toBoolean()) {
        compile project(':module_user')
    }

    if (isAddBaseLib.toBoolean()) {
        compile project(':lib_base')
    }
}
